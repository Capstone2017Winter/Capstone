	component niosII_system is
		port (
			clk_clk                                                     : in    std_logic                     := 'X';             -- clk
			reset_reset_n                                               : in    std_logic                     := 'X';             -- reset_n
			character_lcd_0_external_interface_DATA                     : inout std_logic_vector(7 downto 0)  := (others => 'X'); -- DATA
			character_lcd_0_external_interface_ON                       : out   std_logic;                                        -- ON
			character_lcd_0_external_interface_BLON                     : out   std_logic;                                        -- BLON
			character_lcd_0_external_interface_EN                       : out   std_logic;                                        -- EN
			character_lcd_0_external_interface_RS                       : out   std_logic;                                        -- RS
			character_lcd_0_external_interface_RW                       : out   std_logic;                                        -- RW
			sram_0_external_interface_DQ                                : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram_0_external_interface_ADDR                              : out   std_logic_vector(17 downto 0);                    -- ADDR
			sram_0_external_interface_LB_N                              : out   std_logic;                                        -- LB_N
			sram_0_external_interface_UB_N                              : out   std_logic;                                        -- UB_N
			sram_0_external_interface_CE_N                              : out   std_logic;                                        -- CE_N
			sram_0_external_interface_OE_N                              : out   std_logic;                                        -- OE_N
			sram_0_external_interface_WE_N                              : out   std_logic;                                        -- WE_N
			dm9000a_if_0_s1_export_DATA                                 : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DATA
			dm9000a_if_0_s1_export_CMD                                  : out   std_logic;                                        -- CMD
			dm9000a_if_0_s1_export_RD_N                                 : out   std_logic;                                        -- RD_N
			dm9000a_if_0_s1_export_WR_N                                 : out   std_logic;                                        -- WR_N
			dm9000a_if_0_s1_export_CS_N                                 : out   std_logic;                                        -- CS_N
			dm9000a_if_0_s1_export_RST_N                                : out   std_logic;                                        -- RST_N
			dm9000a_if_0_s1_export_INT                                  : in    std_logic                     := 'X';             -- INT
			dm9000a_if_0_s1_export_CLK                                  : out   std_logic;                                        -- CLK
			video_vga_controller_0_external_interface_CLK               : out   std_logic;                                        -- CLK
			video_vga_controller_0_external_interface_HS                : out   std_logic;                                        -- HS
			video_vga_controller_0_external_interface_VS                : out   std_logic;                                        -- VS
			video_vga_controller_0_external_interface_BLANK             : out   std_logic;                                        -- BLANK
			video_vga_controller_0_external_interface_SYNC              : out   std_logic;                                        -- SYNC
			video_vga_controller_0_external_interface_R                 : out   std_logic_vector(9 downto 0);                     -- R
			video_vga_controller_0_external_interface_G                 : out   std_logic_vector(9 downto 0);                     -- G
			video_vga_controller_0_external_interface_B                 : out   std_logic_vector(9 downto 0);                     -- B
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_cmd   : inout std_logic                     := 'X';             -- b_SD_cmd
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat   : inout std_logic                     := 'X';             -- b_SD_dat
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat3  : inout std_logic                     := 'X';             -- b_SD_dat3
			altera_up_sd_card_avalon_interface_0_conduit_end_o_SD_clock : out   std_logic                                         -- o_SD_clock
		);
	end component niosII_system;

